---
name: pdk

on:
  push:
    branches:
      - "production"
      - "staging"
  pull_request:
    branches:
      - "production"
      - "staging"
    types: ["opened", "synchronize", "reopened", "ready_for_review"]

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  pdk:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        puppet_version:
          - "7"

    name: Puppet ${{ matrix.puppet_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get directories list
        id: get-dirs
        run: |
          if [ "${{ github.event_name }}" == 'pull_request' ] && \
            [ "${{ github.base_ref }}" == 'staging' ]; then
            source_branch="${{ github.base_ref }}"
            git fetch origin $source_branch
            dirs=$(git diff --name-only "origin/$source_branch"..HEAD | grep '^dist/' | cut -d'/' -f1-2 | sort | uniq | jq -R . | jq -s . | jq -cr '@json')
          else
            dirs=$(find dist -mindepth 1 -maxdepth 1 -type d | sort | jq -R . | jq -s . | jq -cr '@json')
          fi
          echo "dirs: $dirs"
          echo "DIRS=$dirs" >> "$GITHUB_OUTPUT"
      - name: Install the PDK
        run: |
          source /etc/os-release
          wget https://apt.puppet.com/puppet-tools-release-${UBUNTU_CODENAME}.deb
          sudo dpkg -i puppet-tools-release-${UBUNTU_CODENAME}.deb
          sudo apt-get update
          sudo apt-get install pdk
        if: |
          steps.get-dirs.outputs.DIRS != '[]'
      - name: Syntax validation
        run: |
          for dir in $(echo '${{ steps.get-dirs.outputs.DIRS }}' | jq -r '.[]'); do
            echo -e "\nProcessing directory: $dir"
            cd "$dir" || exit
            pdk validate --puppet-version "${{ matrix.puppet_version }}"
            cd -
          done
        if: |
          steps.get-dirs.outputs.DIRS != '[]'
        continue-on-error: true
      - name: Unit tests
        run: |
          for dir in $(echo '${{ steps.get-dirs.outputs.DIRS }}' | jq -r '.[]'); do
            echo -e "\nProcessing directory: $dir"
            cd "$dir" || exit
            pdk test unit --verbose ${{ matrix.puppet_version }}
            cd -
          done
        if: |
          steps.get-dirs.outputs.DIRS != '[]'
        continue-on-error: false
